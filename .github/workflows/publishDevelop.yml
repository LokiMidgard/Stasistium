name: .NET Core

on: 
  push:
    branches: 
      - develop

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'


    - name: GitVersion
      run: | 
        dotnet tool install --global GitVersion.Tool --version 5.6.4
        dotnet gitversion /output buildserver
    - name: Disable GitVersionTask on builds
      shell: pwsh
      run: |
        set-content -Path Directory.build.props -Value '<?xml version="1.0" encoding="utf-8"?>
        <Project>
          <PropertyGroup>
            <LangVersion>latest</LangVersion>
            <Authors>foo</Authors>
            <Company>foo</Company>
            <PackageProjectUrl>foo</PackageProjectUrl>
            <RepositoryUrl>foo</RepositoryUrl>
            <RepositoryType>git</RepositoryType>
            <NoWarn>CS0618;CS1591;CS1701;CS8618;CS8632;NU5048;NU5105;NU5125</NoWarn>
          </PropertyGroup>
          <PropertyGroup Condition=" ''$(GitVersion_SemVer)'' != ''''">
            <GetVersion>false</GetVersion>
            <WriteVersionInfoToBuildLog>false</WriteVersionInfoToBuildLog>
            <UpdateAssemblyInfo>false</UpdateAssemblyInfo>
            <GenerateGitVersionInformation>false</GenerateGitVersionInformation>
            <Version>$(GitVersion_FullSemVer)</Version>
            <VersionPrefix>$(GitVersion_MajorMinorPatch)</VersionPrefix>
            <VersionSuffix Condition=" ''$(UseFullSemVerForNuGet)'' == ''false'' ">$(GitVersion_NuGetPreReleaseTag)</VersionSuffix>
            <VersionSuffix Condition=" ''$(UseFullSemVerForNuGet)'' == ''true'' ">$(GitVersion_PreReleaseTag)</VersionSuffix>
            <PackageVersion Condition=" ''$(UseFullSemVerForNuGet)'' == ''false'' ">$(GitVersion_NuGetVersion)</PackageVersion>
            <PackageVersion Condition=" ''$(UseFullSemVerForNuGet)'' == ''true'' ">$(GitVersion_FullSemVer)</PackageVersion>
            <InformationalVersion Condition=" ''$(InformationalVersion)'' == '''' ">$(GitVersion_InformationalVersion)</InformationalVersion>
            <AssemblyVersion Condition=" ''$(AssemblyVersion)'' == '''' ">$(GitVersion_AssemblySemVer)</AssemblyVersion>
            <FileVersion Condition=" ''$(FileVersion)'' == '''' ">$(GitVersion_AssemblySemFileVer)</FileVersion>
            <RepositoryBranch Condition=" ''$(RepositoryBranch)'' == '''' ">$(GitVersion_BranchName)</RepositoryBranch>
            <RepositoryCommit Condition=" ''$(RepositoryCommit)'' == '''' ">$(GitVersion_Sha)</RepositoryCommit>
          </PropertyGroup>
        </Project>'

    - name: Install dependencies
      run: dotnet restore
    - name: Build with dotnet
      run: dotnet build --configuration Debug --no-restore
    - name: Pack
      run: dotnet pack --configuration Debug
    - name: Publish
      run: dotnet nuget push **/*.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NugetApiKey }}
